// KTIJ-24132
// ALLOW_ERRORS

<!HIGHLIGHTING("textAttributesKey='KOTLIN_BUILTIN_ANNOTATION'")!>public<!> <!HIGHLIGHTING("severity='ERROR'; descr='[NOT_A_MULTIPLATFORM_COMPILATION] 'expect' and 'actual' declarations can be used only in multiplatform projects. Learn more about Kotlin Multiplatform: https://kotl.in/multiplatform-setup'"), HIGHLIGHTING("textAttributesKey='KOTLIN_BUILTIN_ANNOTATION'")!>expect<!> interface <!HIGHLIGHTING("textAttributesKey='KOTLIN_TRAIT'")!>CompletionHandler<!> {
    <!HIGHLIGHTING("textAttributesKey='KOTLIN_BUILTIN_ANNOTATION'")!>public<!> <!HIGHLIGHTING("textAttributesKey='KOTLIN_BUILTIN_ANNOTATION'")!>operator<!> fun <!HIGHLIGHTING("textAttributesKey='KOTLIN_FUNCTION_DECLARATION'")!>invoke<!>(<!HIGHLIGHTING("textAttributesKey='KOTLIN_PARAMETER'")!>cause<!>: <!HIGHLIGHTING("textAttributesKey='KOTLIN_CLASS'")!>Throwable<!>?)
}

<!HIGHLIGHTING("severity='ERROR'; descr='[ACTUAL_TYPE_ALIAS_TO_CLASS_WITH_DECLARATION_SITE_VARIANCE] Aliased class should not have type parameters with declaration-site variance'"), HIGHLIGHTING("severity='ERROR'; descr='[ACTUAL_TYPE_ALIAS_WITH_COMPLEX_SUBSTITUTION] Type arguments in the right-hand side of actual type alias should be its type parameters in the same order, e.g. 'actual typealias Foo<A, B> = Bar<A, B>''")!><!HIGHLIGHTING("textAttributesKey='KOTLIN_BUILTIN_ANNOTATION'")!>public<!> <!HIGHLIGHTING("severity='ERROR'; descr='[NOT_A_MULTIPLATFORM_COMPILATION] 'expect' and 'actual' declarations can be used only in multiplatform projects. Learn more about Kotlin Multiplatform: https://kotl.in/multiplatform-setup'"), HIGHLIGHTING("textAttributesKey='KOTLIN_BUILTIN_ANNOTATION'")!>actual<!> typealias <!HIGHLIGHTING("textAttributesKey='KOTLIN_TYPE_ALIAS'")!>CompletionHandler<!> = (<!HIGHLIGHTING("textAttributesKey='KOTLIN_PARAMETER'")!>cause<!>: <!HIGHLIGHTING("textAttributesKey='KOTLIN_CLASS'")!>Throwable<!>?) -> <!HIGHLIGHTING("textAttributesKey='KOTLIN_OBJECT'")!>Unit<!><!>
